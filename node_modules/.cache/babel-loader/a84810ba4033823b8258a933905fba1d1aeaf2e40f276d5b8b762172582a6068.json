{"ast":null,"code":"var _jsxFileName = \"/Users/y.i_2.0/Documents/course/FoodPlanner/src/components/Homepage.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { GoogleGenerativeAI } from \"@google/generative-ai\";\nimport AiwithImage from \"./upload\";\nimport Planner from \"./weeklyplanner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst genAI = new GoogleGenerativeAI(\"AIzaSyAqmfslqSGlrqWbSllhR5ce0NPD2hxMuGs\");\nconst model = genAI.getGenerativeModel({\n  model: \"gemini-pro-vision\"\n});\nconst model_text = genAI.getGenerativeModel({\n  model: \"gemini-pro\"\n});\nconst now_date = new Date();\nconst exp_date = new Date(now_date);\nexp_date.setDate(exp_date.getDate() + 3);\nconst recipeTemplate = {\n  recipeName: \"\",\n  recipeDescription: \"\",\n  numberIn14Days: 0\n};\nconst result_schedule = Array.from({\n  length: 14\n}, () => ({\n  ...recipeTemplate\n}));\nconst CATEGORIES = [{\n  name: \"food\",\n  color: \"#3b82f6\"\n}, {\n  name: \"receipe\",\n  color: \"#16a34a\"\n}];\nconst testfoods = [{\n  id: 1,\n  name: \"apple\",\n  count: 3,\n  purchaseDate: \"2023\",\n  expirationDate: \"2023\"\n}, {\n  id: 2,\n  name: \"pork belly\",\n  count: 2,\n  purchaseDate: \"2023\",\n  expirationDate: \"2023\"\n}, {\n  id: 3,\n  name: \"spinach\",\n  count: 1,\n  purchaseDate: \"2023\",\n  expirationDate: \"2023\"\n}];\nconst Home = () => {\n  _s();\n  const [search, setSearch] = useState(\"\");\n  const [allergies, setAllergies] = useState(\"\");\n  const [foods, setfoods] = useState([]);\n  const [recipes, setRecipe] = useState(result_schedule);\n  const [loading, setLoading] = useState(false);\n  const [showAddFood, setShowAddFood] = useState(false);\n  const handleChangeSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  // Generative AI Call to fetch dishes\n\n  async function changeAllergies() {\n    setLoading(true);\n    setAllergies(\"${search}\");\n    setLoading(false);\n  }\n  const handleClick = () => {\n    changeAllergies();\n  };\n  async function generateRecipe() {\n    setLoading(true);\n    try {\n      // Format the expiration dates as strings for the prompt\n      const prompt = `Generate a evenly distributed 14-day schedule of recipes for each of the following foods based on their expiration dates: ${foods.map(food => `${food.name} (expires on ${food.expirationDate})`).join(\", \")}, and restricted to the diet type${selectedDiets.length > 1 ? \"s\" : \"\"} ${selectedDiets.join(\", \").replace(/, ([^,]*)$/, \" and $1\")}. Also strictly avoid foods in ${allergies}. Please provide the answer in the form of strictly JSON array, make JSON valid: an array [{recipeName, recipeDescription, numberIn14Days}]. only give the array, the array has 14 items, if one day i is empty, then there is write {\"\",\"\",i}, try to start fill the array from the beginning`;\n      const result = await model_text.generateContent([prompt]);\n      const response = await result.response.candidates[0].content.parts[0].text;\n      console.log(response);\n      setRecipe(JSON.parse(response));\n    } catch (error) {\n      console.error(\"Failed to generate schedule\", error);\n      setRecipe(\"Error generating schedule: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  }\n  const handleClick2 = () => {\n    generateRecipe();\n  };\n  const appTitle = \"Food Planner\";\n  const [diets, setDiets] = useState([{\n    type: \"Vegan Diet\",\n    isSelected: false\n  }, {\n    type: \"Ketogenic\",\n    isSelected: false\n  }, {\n    type: \"Mediterranean Diet\",\n    isSelected: false\n  }, {\n    type: \"Paleo Diet\",\n    isSelected: false\n  }, {\n    type: \"Atkins\",\n    isSelected: false\n  }, {\n    type: \"Carnivore Diet\",\n    isSelected: false\n  }, {\n    type: \"Dubrow Diet\",\n    isSelected: false\n  }, {\n    type: \"Intermittent Fasting\",\n    isSelected: false\n  }]);\n  const [selectedDiets, setSelectedDiets] = useState([]);\n  const handleDietChange = changedDiet => {\n    const updatedDiets = diets.map(diet => {\n      if (diet.type === changedDiet.type) {\n        return {\n          ...diet,\n          isSelected: !diet.isSelected\n        };\n      }\n      return diet;\n    });\n    setDiets(updatedDiets);\n\n    // Update selected diets array\n    const updatedSelectedDiets = updatedDiets.filter(diet => diet.isSelected).map(diet => diet.type);\n    setSelectedDiets(updatedSelectedDiets);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: appTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AiwithImage, {\n      start_id: foods.length,\n      setfoods: setfoods\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), loading === true && search !== \"\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        margin: \"30px 0\"\n      },\n      children: \"Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"30px 0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-large btn-open\",\n      onClick: () => setShowAddFood(show => !show),\n      children: showAddFood ? \"Close\" : \"Add food!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), showAddFood ? /*#__PURE__*/_jsxDEV(NewFoodForm, {\n      foods: foods,\n      setfoods: setfoods,\n      setShowAddFood: setShowAddFood\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this) : null, \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(DietFilters, {\n        diets: diets,\n        onDietChange: handleDietChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Have other allergies? No worries! Tell us you want to avoid these food:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Last time record\",\n          onChange: e => handleChangeSearch(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            marginLeft: \"20px\"\n          },\n          onClick: () => handleClick(),\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            marginLeft: \"20px\"\n          },\n          onClick: () => handleClick2(),\n          children: \"Regenerate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FoodList, {\n      foods: foods,\n      setfoods: setfoods\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Planner, {\n      recipeArrayProp: recipes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"Y2KqVisXwqR8krrX6AfBuuk3Xyw=\");\n_c = Home;\nfunction Loader() {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"message\",\n    children: \"Loading ...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 10\n  }, this);\n}\n_c2 = Loader;\nfunction NewFoodForm({\n  foods,\n  setfoods,\n  setShowAddFood\n}) {\n  _s2();\n  const [name, setName] = useState(\"\");\n  const [count, setCount] = useState(0);\n  const [isUpLoading, setIsUpLoading] = useState(false);\n  const [purchaseDate, setPurchaseDate] = useState(\"\");\n  const [expirationDate, setExpirationDate] = useState(\"\");\n  async function handleSubmit(e) {\n    setIsUpLoading(true);\n    const newfood = {\n      id: foods.length,\n      name: name,\n      count: count,\n      purchaseDate: purchaseDate,\n      expirationDate: expirationDate\n    };\n    setfoods(foods => [...foods, newfood]);\n\n    //5. Reset input fields\n    setName(\"\");\n    setCount(0);\n\n    //6. Close the form\n    setShowAddFood(false);\n    setIsUpLoading(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"food-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"What's your food?\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      disabled: isUpLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"How many do you buy?\",\n      value: count,\n      onChange: e => setCount(e.target.value),\n      disabled: isUpLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      placeholder: \"Purchase Date\",\n      value: purchaseDate,\n      onChange: e => setPurchaseDate(e.target.value),\n      disabled: isUpLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      placeholder: \"Expiration Date\",\n      value: expirationDate,\n      onChange: e => setExpirationDate(e.target.value),\n      disabled: isUpLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-large\",\n      disabled: isUpLoading,\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n}\n_s2(NewFoodForm, \"vOj9bHnweAKO6hGLgMcqJPdgGlY=\");\n_c3 = NewFoodForm;\nfunction FoodList({\n  foods,\n  setfoods\n}) {\n  if (foods.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: \"No foods Now. Upload a photo to add!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"food-list\",\n      children: foods.map(food => /*#__PURE__*/_jsxDEV(Food, {\n        food: food,\n        setfoods: setfoods\n      }, food.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"There are \", foods.length, \" foods in the fridge!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 5\n  }, this);\n}\n_c4 = FoodList;\nfunction Food({\n  food,\n  setfoods\n}) {\n  _s3();\n  const [isUpdating, setIsUpdating] = useState(false);\n  async function handleChange(columnName) {\n    setIsUpdating(true);\n    if (columnName === \"add\") {\n      setfoods(foods => foods.map(f => f.id === food.id ? {\n        ...food,\n        count: food.count + 1\n      } : f));\n    } else if (columnName === \"minus\") {\n      if (food.count === 1) {\n        setfoods(foods => foods.filter(f => f.id !== food.id));\n      }\n      setfoods(foods => foods.map(f => f.id === food.id ? {\n        ...food,\n        count: food.count - 1\n      } : f));\n    } else {\n      setfoods(foods => foods.filter(f => f.id !== food.id));\n    }\n    setIsUpdating(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"food\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: food.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"food-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tag\",\n        children: food.count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tag\",\n        children: food.purchaseDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tag\",\n        children: food.expirationDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"change-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleChange(\"add\"),\n        disabled: isUpdating,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleChange(\"minus\"),\n        disabled: isUpdating,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"confirm-button\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleChange(\"delete\"),\n        disabled: isUpdating,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 305,\n    columnNumber: 5\n  }, this);\n}\n_s3(Food, \"Iu9QP35HOe9AU5k2QizHmZa0ji4=\");\n_c5 = Food;\nconst DietFilters = ({\n  diets,\n  onDietChange\n}) => {\n  const handleChange = dietType => {\n    onDietChange(dietType);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select Your Diet Type:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this), diets.map((diet, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: diet.type,\n        name: diet.type,\n        checked: diet.isSelected,\n        onChange: () => handleChange(diet)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: diet.type,\n        children: diet.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 336,\n    columnNumber: 5\n  }, this);\n};\n_c6 = DietFilters;\nexport default Home;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Home\");\n$RefreshReg$(_c2, \"Loader\");\n$RefreshReg$(_c3, \"NewFoodForm\");\n$RefreshReg$(_c4, \"FoodList\");\n$RefreshReg$(_c5, \"Food\");\n$RefreshReg$(_c6, \"DietFilters\");","map":{"version":3,"names":["React","useState","GoogleGenerativeAI","AiwithImage","Planner","jsxDEV","_jsxDEV","genAI","model","getGenerativeModel","model_text","now_date","Date","exp_date","setDate","getDate","recipeTemplate","recipeName","recipeDescription","numberIn14Days","result_schedule","Array","from","length","CATEGORIES","name","color","testfoods","id","count","purchaseDate","expirationDate","Home","_s","search","setSearch","allergies","setAllergies","foods","setfoods","recipes","setRecipe","loading","setLoading","showAddFood","setShowAddFood","handleChangeSearch","e","target","value","changeAllergies","handleClick","generateRecipe","prompt","map","food","join","selectedDiets","replace","result","generateContent","response","candidates","content","parts","text","console","log","JSON","parse","error","message","handleClick2","appTitle","diets","setDiets","type","isSelected","setSelectedDiets","handleDietChange","changedDiet","updatedDiets","diet","updatedSelectedDiets","filter","children","className","fileName","_jsxFileName","lineNumber","columnNumber","start_id","style","margin","onClick","show","NewFoodForm","display","DietFilters","onDietChange","placeholder","onChange","marginLeft","FoodList","recipeArrayProp","_c","Loader","_c2","_s2","setName","setCount","isUpLoading","setIsUpLoading","setPurchaseDate","setExpirationDate","handleSubmit","newfood","onSubmit","disabled","_c3","Food","_c4","_s3","isUpdating","setIsUpdating","handleChange","columnName","f","_c5","dietType","index","checked","htmlFor","_c6","$RefreshReg$"],"sources":["/Users/y.i_2.0/Documents/course/FoodPlanner/src/components/Homepage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { GoogleGenerativeAI } from \"@google/generative-ai\";\nimport AiwithImage from \"./upload\";\nimport Planner from \"./weeklyplanner\";\n\nconst genAI = new GoogleGenerativeAI(\"AIzaSyAqmfslqSGlrqWbSllhR5ce0NPD2hxMuGs\");\nconst model = genAI.getGenerativeModel({ model: \"gemini-pro-vision\" });\nconst model_text = genAI.getGenerativeModel({ model: \"gemini-pro\" });\n\nconst now_date = new Date();\nconst exp_date = new Date(now_date);\nexp_date.setDate(exp_date.getDate() + 3);\n\nconst recipeTemplate = {\n  recipeName: \"\",\n  recipeDescription: \"\",\n  numberIn14Days: 0,\n};\n\nconst result_schedule = Array.from({ length: 14 }, () => ({\n  ...recipeTemplate,\n}));\nconst CATEGORIES = [\n  { name: \"food\", color: \"#3b82f6\" },\n  { name: \"receipe\", color: \"#16a34a\" },\n];\n\nconst testfoods = [\n  {\n    id: 1,\n    name: \"apple\",\n    count: 3,\n    purchaseDate: \"2023\",\n    expirationDate: \"2023\",\n  },\n  {\n    id: 2,\n    name: \"pork belly\",\n    count: 2,\n    purchaseDate: \"2023\",\n    expirationDate: \"2023\",\n  },\n  {\n    id: 3,\n    name: \"spinach\",\n    count: 1,\n    purchaseDate: \"2023\",\n    expirationDate: \"2023\",\n  },\n];\n\nconst Home = () => {\n  const [search, setSearch] = useState(\"\");\n  const [allergies, setAllergies] = useState(\"\");\n  const [foods, setfoods] = useState([]);\n  const [recipes, setRecipe] = useState(result_schedule);\n  const [loading, setLoading] = useState(false);\n\n  const [showAddFood, setShowAddFood] = useState(false);\n\n  const handleChangeSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  // Generative AI Call to fetch dishes\n\n  async function changeAllergies() {\n    setLoading(true);\n    setAllergies(\"${search}\");\n    setLoading(false);\n  }\n\n  const handleClick = () => {\n    changeAllergies();\n  };\n\n  async function generateRecipe() {\n    setLoading(true);\n    try {\n      // Format the expiration dates as strings for the prompt\n      const prompt = `Generate a evenly distributed 14-day schedule of recipes for each of the following foods based on their expiration dates: ${foods\n        .map((food) => `${food.name} (expires on ${food.expirationDate})`)\n        .join(\", \")}, and restricted to the diet type${\n        selectedDiets.length > 1 ? \"s\" : \"\"\n      } ${selectedDiets\n        .join(\", \")\n        .replace(\n          /, ([^,]*)$/,\n          \" and $1\"\n        )}. Also strictly avoid foods in ${allergies}. Please provide the answer in the form of strictly JSON array, make JSON valid: an array [{recipeName, recipeDescription, numberIn14Days}]. only give the array, the array has 14 items, if one day i is empty, then there is write {\"\",\"\",i}, try to start fill the array from the beginning`;\n\n      const result = await model_text.generateContent([prompt]);\n      const response = await result.response.candidates[0].content.parts[0]\n        .text;\n      console.log(response);\n      setRecipe(JSON.parse(response));\n    } catch (error) {\n      console.error(\"Failed to generate schedule\", error);\n      setRecipe(\"Error generating schedule: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  }\n  const handleClick2 = () => {\n    generateRecipe();\n  };\n\n  const appTitle = \"Food Planner\";\n\n  const [diets, setDiets] = useState([\n    { type: \"Vegan Diet\", isSelected: false },\n    { type: \"Ketogenic\", isSelected: false },\n    { type: \"Mediterranean Diet\", isSelected: false },\n    { type: \"Paleo Diet\", isSelected: false },\n    { type: \"Atkins\", isSelected: false },\n    { type: \"Carnivore Diet\", isSelected: false },\n    { type: \"Dubrow Diet\", isSelected: false },\n    { type: \"Intermittent Fasting\", isSelected: false },\n  ]);\n\n  const [selectedDiets, setSelectedDiets] = useState([]);\n\n  const handleDietChange = (changedDiet) => {\n    const updatedDiets = diets.map((diet) => {\n      if (diet.type === changedDiet.type) {\n        return { ...diet, isSelected: !diet.isSelected };\n      }\n      return diet;\n    });\n    setDiets(updatedDiets);\n\n    // Update selected diets array\n    const updatedSelectedDiets = updatedDiets\n      .filter((diet) => diet.isSelected)\n      .map((diet) => diet.type);\n    setSelectedDiets(updatedSelectedDiets);\n  };\n\n  return (\n    <div>\n      <header className=\"header\">\n        <div className=\"logo\">\n          {/* <img src=\"logo.png\" height=\"68\" width=\"68\" alt=\"Today I Learned Logo\" /> */}\n          <h1>{appTitle}</h1>\n        </div>\n      </header>\n      <AiwithImage start_id={foods.length} setfoods={setfoods} />\n\n      {loading === true && search !== \"\" ? (\n        <p style={{ margin: \"30px 0\" }}>Loading ...</p>\n      ) : (\n        <div style={{ margin: \"30px 0\" }}></div>\n      )}\n      <button\n        className=\"btn btn-large btn-open\"\n        onClick={() => setShowAddFood((show) => !show)}\n      >\n        {showAddFood ? \"Close\" : \"Add food!\"}\n      </button>\n      {showAddFood ? (\n        <NewFoodForm\n          foods={foods}\n          setfoods={setfoods}\n          setShowAddFood={setShowAddFood}\n        />\n      ) : null}{\" \"}\n      <div style={{ display: \"flex\" }}>\n        <DietFilters diets={diets} onDietChange={handleDietChange} />\n        <div>\n          <p>\n            Have other allergies? No worries! Tell us you want to avoid these\n            food:\n          </p>\n          <input\n            placeholder=\"Last time record\"\n            onChange={(e) => handleChangeSearch(e)}\n          />\n          <button style={{ marginLeft: \"20px\" }} onClick={() => handleClick()}>\n            Confirm\n          </button>\n          <button style={{ marginLeft: \"20px\" }} onClick={() => handleClick2()}>\n            Regenerate\n          </button>\n        </div>\n      </div>\n\n      <FoodList foods={foods} setfoods={setfoods} />\n      <Planner recipeArrayProp={recipes} />\n    </div>\n  );\n};\n\nfunction Loader() {\n  return <p className=\"message\">Loading ...</p>;\n}\n\nfunction NewFoodForm({ foods, setfoods, setShowAddFood }) {\n  const [name, setName] = useState(\"\");\n  const [count, setCount] = useState(0);\n  const [isUpLoading, setIsUpLoading] = useState(false);\n  const [purchaseDate, setPurchaseDate] = useState(\"\");\n  const [expirationDate, setExpirationDate] = useState(\"\");\n\n  async function handleSubmit(e) {\n    setIsUpLoading(true);\n    const newfood = {\n      id: foods.length,\n      name: name,\n      count: count,\n      purchaseDate: purchaseDate,\n      expirationDate: expirationDate,\n    };\n\n    setfoods((foods) => [...foods, newfood]);\n\n    //5. Reset input fields\n    setName(\"\");\n    setCount(0);\n\n    //6. Close the form\n    setShowAddFood(false);\n    setIsUpLoading(false);\n  }\n\n  return (\n    <form className=\"food-form\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"What's your food?\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n        disabled={isUpLoading}\n      />\n      <input\n        type=\"number\"\n        placeholder=\"How many do you buy?\"\n        value={count}\n        onChange={(e) => setCount(e.target.value)}\n        disabled={isUpLoading}\n      />\n      <input\n        type=\"date\"\n        placeholder=\"Purchase Date\"\n        value={purchaseDate}\n        onChange={(e) => setPurchaseDate(e.target.value)}\n        disabled={isUpLoading}\n      />\n      <input\n        type=\"date\"\n        placeholder=\"Expiration Date\"\n        value={expirationDate}\n        onChange={(e) => setExpirationDate(e.target.value)}\n        disabled={isUpLoading}\n      />\n      <button className=\"btn btn-large\" disabled={isUpLoading}>\n        Post\n      </button>\n    </form>\n  );\n}\n\nfunction FoodList({ foods, setfoods }) {\n  if (foods.length === 0) {\n    return <p className=\"message\">No foods Now. Upload a photo to add!</p>;\n  }\n\n  return (\n    <section>\n      <ul className=\"food-list\">\n        {foods.map((food) => (\n          <Food key={food.id} food={food} setfoods={setfoods} />\n        ))}\n      </ul>\n      <p>There are {foods.length} foods in the fridge!</p>\n    </section>\n  );\n}\n\nfunction Food({ food, setfoods }) {\n  const [isUpdating, setIsUpdating] = useState(false);\n  async function handleChange(columnName) {\n    setIsUpdating(true);\n    if (columnName === \"add\") {\n      setfoods((foods) =>\n        foods.map((f) =>\n          f.id === food.id ? { ...food, count: food.count + 1 } : f\n        )\n      );\n    } else if (columnName === \"minus\") {\n      if (food.count === 1) {\n        setfoods((foods) => foods.filter((f) => f.id !== food.id));\n      }\n      setfoods((foods) =>\n        foods.map((f) =>\n          f.id === food.id ? { ...food, count: food.count - 1 } : f\n        )\n      );\n    } else {\n      setfoods((foods) => foods.filter((f) => f.id !== food.id));\n    }\n    setIsUpdating(false);\n  }\n\n  return (\n    <li className=\"food\">\n      <p>{food.name}</p>\n      <div className=\"food-description\">\n        <span className=\"tag\">{food.count}</span>\n        <span className=\"tag\">{food.purchaseDate}</span>\n        <span className=\"tag\">{food.expirationDate}</span>\n      </div>\n\n      <div className=\"change-buttons\">\n        <button onClick={() => handleChange(\"add\")} disabled={isUpdating}>\n          +\n        </button>\n        <button onClick={() => handleChange(\"minus\")} disabled={isUpdating}>\n          -\n        </button>\n      </div>\n      <div className=\"confirm-button\">\n        <button onClick={() => handleChange(\"delete\")} disabled={isUpdating}>\n          Delete\n        </button>\n      </div>\n    </li>\n  );\n}\n\nconst DietFilters = ({ diets, onDietChange }) => {\n  const handleChange = (dietType) => {\n    onDietChange(dietType);\n  };\n\n  return (\n    <div>\n      <h3>Select Your Diet Type:</h3>\n      {diets.map((diet, index) => (\n        <div key={index}>\n          <input\n            type=\"checkbox\"\n            id={diet.type}\n            name={diet.type}\n            checked={diet.isSelected}\n            onChange={() => handleChange(diet)}\n          />\n          <label htmlFor={diet.type}>{diet.type}</label>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}