{"ast":null,"code":"var _jsxFileName = \"/Users/y.i_2.0/Documents/course/FoodPlanner/src/components/Homepage.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { GoogleGenerativeAI } from \"@google/generative-ai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst genAI = new GoogleGenerativeAI(\"AIzaSyAqmfslqSGlrqWbSllhR5ce0NPD2hxMuGs\");\nconst model = genAI.getGenerativeModel({\n  model: \"gemini-pro-vision\"\n});\nconst model_text = genAI.getGenerativeModel({\n  model: \"gemini-pro\"\n});\nconst now_date = new Date();\nconst exp_date = new Date(now_date);\nexp_date.setDate(exp_date.getDate() + 3);\nconst result_schedule = [{\n  recipeName: \"\",\n  recipeDescription: \"\",\n  numberIn14Days: 0\n}];\nconst testfoods = [{\n  id: 1,\n  name: \"apple\",\n  count: 3,\n  purchaseDate: now_date,\n  expirationDate: exp_date\n}, {\n  id: 2,\n  name: \"pork belly\",\n  count: 2,\n  purchaseDate: now_date,\n  expirationDate: exp_date\n}, {\n  id: 3,\n  name: \"spinach\",\n  count: 1,\n  purchaseDate: now_date,\n  expirationDate: exp_date\n}];\nconst Home = () => {\n  _s();\n  const [search, setSearch] = useState(\"\");\n  const [aiResponse, setResponse] = useState(\"\");\n  const [foods, setfoods] = useState(testfoods);\n  const [recipes, setRecipe] = useState(result_schedule);\n  const [loading, setLoading] = useState(false);\n  const [showAddFood, setShowAddFood] = useState(false);\n  const handleChangeSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  // Generative AI Call to fetch dishes\n\n  async function aiRun() {\n    setLoading(true);\n    const prompt = `random meals related to ${search} category with images and prices`;\n    const result = await model_text.generateContent([prompt]);\n    const response = await result.response;\n    const text = response.text();\n    setResponse(text);\n    setLoading(false);\n  }\n  const handleClick = () => {\n    aiRun();\n  };\n  async function generateRecipe() {\n    setLoading(true);\n    try {\n      // Format the expiration dates as strings for the prompt\n      const prompt = `Generate an evenly distributed 14-day schedule of recipes for each of the following foods based on their expiration dates: ${testfoods.map(food => `${food.name} (expires on ${food.expirationDate.toISOString().substring(0, 10)})`).join(\", \")}, and restricted to the diet type${selectedDiets.length > 1 ? \"s\" : \"\"} ${selectedDiets.join(\", \").replace(/, ([^,]*)$/, \" and $1\")}. Please provide the answer in the form of an array [{recipeName, recipeDescription, numberIn14Days}].`;\n      const result = await model_text.generateContent(prompt);\n      setRecipe(result);\n      //const text = await result_schedule.text();\n      // setRecipe(text);\n    } catch (error) {\n      console.error(\"Failed to generate schedule\", error);\n      setRecipe(\"Error generating schedule: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  }\n  const handleClick2 = () => {\n    generateRecipe();\n  };\n  const [diets, setDiets] = useState([{\n    type: \"Vegan Diet\",\n    isSelected: false\n  }, {\n    type: \"Ketogenic\",\n    isSelected: false\n  }, {\n    type: \"Mediterranean Diet\",\n    isSelected: false\n  }, {\n    type: \"Paleo Diet\",\n    isSelected: false\n  }, {\n    type: \"Atkins\",\n    isSelected: false\n  }, {\n    type: \"Carnivore Diet\",\n    isSelected: false\n  }, {\n    type: \"Dubrow Diet\",\n    isSelected: false\n  }, {\n    type: \"Intermittent Fasting\",\n    isSelected: false\n  }]);\n  const [selectedDiets, setSelectedDiets] = useState([]);\n  const handleDietChange = changedDiet => {\n    const updatedDiets = diets.map(diet => {\n      if (diet.type === changedDiet.type) {\n        return {\n          ...diet,\n          isSelected: !diet.isSelected\n        };\n      }\n      return diet;\n    });\n    setDiets(updatedDiets);\n\n    // Update selected diets array\n    const updatedSelectedDiets = updatedDiets.filter(diet => diet.isSelected).map(diet => diet.type);\n    setSelectedDiets(updatedSelectedDiets);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Generative AI Restaurant App!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Built with \\u2764\\uFE0F using ReactJS + Redux + Google Gemini\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Search Food with Category using Generative AI\",\n        onChange: e => handleChangeSearch(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginLeft: \"20px\"\n        },\n        onClick: () => handleClick(),\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginLeft: \"20px\"\n        },\n        onClick: () => handleClick2(),\n        children: \"Regenerate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), loading === true && search !== \"\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        margin: \"30px 0\"\n      },\n      children: \"Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"30px 0\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: aiResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FoodList, {\n      foods: foods,\n      setfoods: setfoods\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"QZNNR5tdjcHF2Qb9FlyGe16U5f8=\");\n_c = Home;\nfunction NewFoodForm({\n  foods,\n  setfoods,\n  setShowAddFood\n}) {\n  _s2();\n  const [name, setName] = useState(\"\");\n  const [count, setCount] = useState(0);\n  const [isUpLoading, setIsUpLoading] = useState(false);\n  const [purchaseDate, setPurchaseDate] = useState(\"\");\n  const [expirationDate, setExpirationDate] = useState(\"\");\n  async function handleSubmit(e) {\n    setIsUpLoading(true);\n    const newfood = {\n      id: foods.length,\n      name: name,\n      count: count,\n      purchaseDate: purchaseDate,\n      expirationDate: expirationDate\n    };\n    setfoods(foods => [...foods, newfood]);\n\n    //5. Reset input fields\n    setName(\"\");\n    setCount(0);\n\n    //6. Close the form\n    setShowAddFood(false);\n    setIsUpLoading(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"food-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"What's your food?\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      disabled: isUpLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"How many do you buy?\",\n      value: count,\n      onChange: e => setCount(e.target.value),\n      disabled: isUpLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      placeholder: \"Purchase Date\",\n      value: purchaseDate,\n      onChange: e => setPurchaseDate(e.target.value),\n      disabled: isUpLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      placeholder: \"Expiration Date\",\n      value: expirationDate,\n      onChange: e => setExpirationDate(e.target.value),\n      disabled: isUpLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-large\",\n      disabled: isUpLoading,\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n}\n_s2(NewFoodForm, \"vOj9bHnweAKO6hGLgMcqJPdgGlY=\");\n_c2 = NewFoodForm;\nfunction FoodList({\n  foods,\n  setfoods\n}) {\n  if (foods.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: \"No foods Now. Upload a photo to add!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"food-list\",\n      children: foods.map(food => /*#__PURE__*/_jsxDEV(Food, {\n        food: food,\n        setfoods: setfoods\n      }, food.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"There are \", foods.length, \" foods in the fridge!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 5\n  }, this);\n}\n_c3 = FoodList;\nfunction Food({\n  food,\n  setfoods\n}) {\n  _s3();\n  const [isUpdating, setIsUpdating] = useState(false);\n  async function handleChange(columnName) {\n    setIsUpdating(true);\n    if (columnName === \"add\") {\n      setfoods(foods => foods.map(f => f.id === food.id ? {\n        ...food,\n        count: food.count + 1\n      } : f));\n    } else if (columnName === \"minus\") {\n      if (food.count === 1) {\n        setfoods(foods => foods.filter(f => f.id !== food.id));\n      }\n      setfoods(foods => foods.map(f => f.id === food.id ? {\n        ...food,\n        count: food.count - 1\n      } : f));\n    } else {\n      setfoods(foods => foods.filter(f => f.id !== food.id));\n    }\n    setIsUpdating(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"food\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: food.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"food-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tag\",\n        children: food.count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tag\",\n        children: food.purchaseDate.toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tag\",\n        children: food.expirationDate.toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"change-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleChange(\"add\"),\n        disabled: isUpdating,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleChange(\"minus\"),\n        disabled: isUpdating,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"confirm-button\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleChange(\"delete\"),\n        disabled: isUpdating,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 274,\n    columnNumber: 5\n  }, this);\n}\n_s3(Food, \"Iu9QP35HOe9AU5k2QizHmZa0ji4=\");\n_c4 = Food;\nconst DietFilters = ({\n  diets,\n  onDietChange\n}) => {\n  const handleChange = dietType => {\n    onDietChange(dietType);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select Your Diet Type:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), diets.map((diet, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: diet.type,\n        name: diet.type,\n        checked: diet.isSelected,\n        onChange: () => handleChange(diet)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: diet.type,\n        children: diet.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 305,\n    columnNumber: 5\n  }, this);\n};\n_c5 = DietFilters;\nexport default Home;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Home\");\n$RefreshReg$(_c2, \"NewFoodForm\");\n$RefreshReg$(_c3, \"FoodList\");\n$RefreshReg$(_c4, \"Food\");\n$RefreshReg$(_c5, \"DietFilters\");","map":{"version":3,"names":["React","useState","GoogleGenerativeAI","jsxDEV","_jsxDEV","genAI","model","getGenerativeModel","model_text","now_date","Date","exp_date","setDate","getDate","result_schedule","recipeName","recipeDescription","numberIn14Days","testfoods","id","name","count","purchaseDate","expirationDate","Home","_s","search","setSearch","aiResponse","setResponse","foods","setfoods","recipes","setRecipe","loading","setLoading","showAddFood","setShowAddFood","handleChangeSearch","e","target","value","aiRun","prompt","result","generateContent","response","text","handleClick","generateRecipe","map","food","toISOString","substring","join","selectedDiets","length","replace","error","console","message","handleClick2","diets","setDiets","type","isSelected","setSelectedDiets","handleDietChange","changedDiet","updatedDiets","diet","updatedSelectedDiets","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","placeholder","onChange","marginLeft","onClick","margin","FoodList","_c","NewFoodForm","_s2","setName","setCount","isUpLoading","setIsUpLoading","setPurchaseDate","setExpirationDate","handleSubmit","newfood","className","onSubmit","disabled","_c2","Food","_c3","_s3","isUpdating","setIsUpdating","handleChange","columnName","f","toLocaleString","_c4","DietFilters","onDietChange","dietType","index","checked","htmlFor","_c5","$RefreshReg$"],"sources":["/Users/y.i_2.0/Documents/course/FoodPlanner/src/components/Homepage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { GoogleGenerativeAI } from \"@google/generative-ai\";\n\nconst genAI = new GoogleGenerativeAI(\"AIzaSyAqmfslqSGlrqWbSllhR5ce0NPD2hxMuGs\");\nconst model = genAI.getGenerativeModel({ model: \"gemini-pro-vision\" });\nconst model_text = genAI.getGenerativeModel({ model: \"gemini-pro\" });\n\nconst now_date = new Date();\nconst exp_date = new Date(now_date);\nexp_date.setDate(exp_date.getDate() + 3);\n\n\nconst result_schedule = [\n  { recipeName: \"\", recipeDescription: \"\", numberIn14Days: 0 },\n];\n\n\nconst testfoods = [\n  {\n    id: 1,\n    name: \"apple\",\n    count: 3,\n    purchaseDate: now_date,\n    expirationDate: exp_date,\n  },\n  {\n    id: 2,\n    name: \"pork belly\",\n    count: 2,\n    purchaseDate: now_date,\n    expirationDate: exp_date,\n  },\n  {\n    id: 3,\n    name: \"spinach\",\n    count: 1,\n    purchaseDate: now_date,\n    expirationDate: exp_date,\n  },\n];\n\nconst Home = () => {\n  const [search, setSearch] = useState(\"\");\n  const [aiResponse, setResponse] = useState(\"\");\n  const [foods, setfoods] = useState(testfoods);\n  const [recipes, setRecipe] = useState(result_schedule);\n  const [loading, setLoading] = useState(false);\n\n  const [showAddFood, setShowAddFood] = useState(false);\n\n  const handleChangeSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  // Generative AI Call to fetch dishes\n\n  async function aiRun() {\n    setLoading(true);\n    const prompt = `random meals related to ${search} category with images and prices`;\n    const result = await model_text.generateContent([prompt]);\n    const response = await result.response;\n    const text = response.text();\n    setResponse(text);\n    setLoading(false);\n  }\n\n  const handleClick = () => {\n    aiRun();\n  };\n\n  async function generateRecipe() {\n    setLoading(true);\n    try {\n      // Format the expiration dates as strings for the prompt\n      const prompt = `Generate an evenly distributed 14-day schedule of recipes for each of the following foods based on their expiration dates: ${testfoods\n        .map(\n          (food) =>\n            `${food.name} (expires on ${food.expirationDate\n              .toISOString()\n              .substring(0, 10)})`\n        )\n        .join(\", \")}, and restricted to the diet type${\n        selectedDiets.length > 1 ? \"s\" : \"\"\n      } ${selectedDiets\n        .join(\", \")\n        .replace(\n          /, ([^,]*)$/,\n          \" and $1\"\n        )}. Please provide the answer in the form of an array [{recipeName, recipeDescription, numberIn14Days}].`;\n\n      const result = await model_text.generateContent(prompt);\n      setRecipe(result);\n      //const text = await result_schedule.text();\n      // setRecipe(text);\n    } catch (error) {\n      console.error(\"Failed to generate schedule\", error);\n      setRecipe(\"Error generating schedule: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  }\n  const handleClick2 = () => {\n    generateRecipe();\n  };\n\n  const [diets, setDiets] = useState([\n    { type: \"Vegan Diet\", isSelected: false },\n    { type: \"Ketogenic\", isSelected: false },\n    { type: \"Mediterranean Diet\", isSelected: false },\n    { type: \"Paleo Diet\", isSelected: false },\n    { type: \"Atkins\", isSelected: false },\n    { type: \"Carnivore Diet\", isSelected: false },\n    { type: \"Dubrow Diet\", isSelected: false },\n    { type: \"Intermittent Fasting\", isSelected: false },\n  ]);\n\n  const [selectedDiets, setSelectedDiets] = useState([]);\n\n  const handleDietChange = (changedDiet) => {\n    const updatedDiets = diets.map((diet) => {\n      if (diet.type === changedDiet.type) {\n        return { ...diet, isSelected: !diet.isSelected };\n      }\n      return diet;\n    });\n    setDiets(updatedDiets);\n\n    // Update selected diets array\n    const updatedSelectedDiets = updatedDiets\n      .filter((diet) => diet.isSelected)\n      .map((diet) => diet.type);\n    setSelectedDiets(updatedSelectedDiets);\n  };\n\n  return (\n    <div>\n      <h1>Generative AI Restaurant App!</h1>\n      <p>Built with ❤️ using ReactJS + Redux + Google Gemini</p>\n\n      <div style={{ display: \"flex\" }}>\n        <input\n          placeholder=\"Search Food with Category using Generative AI\"\n          onChange={(e) => handleChangeSearch(e)}\n        />\n        <button style={{ marginLeft: \"20px\" }} onClick={() => handleClick()}>\n          Search\n        </button>\n        <button style={{ marginLeft: \"20px\" }} onClick={() => handleClick2()}>\n          Regenerate\n        </button>\n      </div>\n\n      {loading === true && search !== \"\" ? (\n        <p style={{ margin: \"30px 0\" }}>Loading ...</p>\n      ) : (\n        <div style={{ margin: \"30px 0\" }}>\n          <p>{aiResponse}</p>\n        </div>\n      )}\n\n      <FoodList foods={foods} setfoods={setfoods} />\n    </div>\n  );\n};\n\nfunction NewFoodForm({ foods, setfoods, setShowAddFood }) {\n  const [name, setName] = useState(\"\");\n  const [count, setCount] = useState(0);\n  const [isUpLoading, setIsUpLoading] = useState(false);\n  const [purchaseDate, setPurchaseDate] = useState(\"\");\n  const [expirationDate, setExpirationDate] = useState(\"\");\n\n  async function handleSubmit(e) {\n    setIsUpLoading(true);\n    const newfood = {\n      id: foods.length,\n      name: name,\n      count: count,\n      purchaseDate: purchaseDate,\n      expirationDate: expirationDate,\n    };\n\n    setfoods((foods) => [...foods, newfood]);\n\n    //5. Reset input fields\n    setName(\"\");\n    setCount(0);\n\n    //6. Close the form\n    setShowAddFood(false);\n    setIsUpLoading(false);\n  }\n\n  return (\n    <form className=\"food-form\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"What's your food?\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n        disabled={isUpLoading}\n      />\n      <input\n        type=\"number\"\n        placeholder=\"How many do you buy?\"\n        value={count}\n        onChange={(e) => setCount(e.target.value)}\n        disabled={isUpLoading}\n      />\n      <input\n        type=\"date\"\n        placeholder=\"Purchase Date\"\n        value={purchaseDate}\n        onChange={(e) => setPurchaseDate(e.target.value)}\n        disabled={isUpLoading}\n      />\n      <input\n        type=\"date\"\n        placeholder=\"Expiration Date\"\n        value={expirationDate}\n        onChange={(e) => setExpirationDate(e.target.value)}\n        disabled={isUpLoading}\n      />\n      <button className=\"btn btn-large\" disabled={isUpLoading}>\n        Post\n      </button>\n    </form>\n  );\n}\n\nfunction FoodList({ foods, setfoods }) {\n  if (foods.length === 0) {\n    return <p className=\"message\">No foods Now. Upload a photo to add!</p>;\n  }\n\n  return (\n    <section>\n      <ul className=\"food-list\">\n        {foods.map((food) => (\n          <Food key={food.id} food={food} setfoods={setfoods} />\n        ))}\n      </ul>\n      <p>There are {foods.length} foods in the fridge!</p>\n    </section>\n  );\n}\n\nfunction Food({ food, setfoods }) {\n  const [isUpdating, setIsUpdating] = useState(false);\n  async function handleChange(columnName) {\n    setIsUpdating(true);\n    if (columnName === \"add\") {\n      setfoods((foods) =>\n        foods.map((f) =>\n          f.id === food.id ? { ...food, count: food.count + 1 } : f\n        )\n      );\n    } else if (columnName === \"minus\") {\n      if (food.count === 1) {\n        setfoods((foods) => foods.filter((f) => f.id !== food.id));\n      }\n      setfoods((foods) =>\n        foods.map((f) =>\n          f.id === food.id ? { ...food, count: food.count - 1 } : f\n        )\n      );\n    } else {\n      setfoods((foods) => foods.filter((f) => f.id !== food.id));\n    }\n    setIsUpdating(false);\n  }\n\n  return (\n    <li className=\"food\">\n      <p>{food.name}</p>\n      <div className=\"food-description\">\n        <span className=\"tag\">{food.count}</span>\n        <span className=\"tag\">{food.purchaseDate.toLocaleString()}</span>\n        <span className=\"tag\">{food.expirationDate.toLocaleString()}</span>\n      </div>\n\n      <div className=\"change-buttons\">\n        <button onClick={() => handleChange(\"add\")} disabled={isUpdating}>\n          +\n        </button>\n        <button onClick={() => handleChange(\"minus\")} disabled={isUpdating}>\n          -\n        </button>\n      </div>\n      <div className=\"confirm-button\">\n        <button onClick={() => handleChange(\"delete\")} disabled={isUpdating}>\n          Delete\n        </button>\n      </div>\n    </li>\n  );\n}\n\nconst DietFilters = ({ diets, onDietChange }) => {\n  const handleChange = (dietType) => {\n    onDietChange(dietType);\n  };\n\n  return (\n    <div>\n      <h3>Select Your Diet Type:</h3>\n      {diets.map((diet, index) => (\n        <div key={index}>\n          <input\n            type=\"checkbox\"\n            id={diet.type}\n            name={diet.type}\n            checked={diet.isSelected}\n            onChange={() => handleChange(diet)}\n          />\n          <label htmlFor={diet.type}>{diet.type}</label>\n        </div>\n      ))}\n    </div>\n  );\n};\n\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}